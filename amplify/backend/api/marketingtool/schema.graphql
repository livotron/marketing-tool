type Business @model 
    @auth(rules: [
          { allow: owner },
          { allow: public, operations: [read]},
          { allow: private, operations: [read] },
      ]) {
  id: ID!
  companyName: String!
  storeURLs: [String!]!
  websiteURLs: [String!]!
  profiles: [Profile] @connection(keyName: "byBusiness", fields: ["id"])
  # _version: Int
}

type Profile @model
    @key(name: "byBusiness", fields: ["businessID"], queryField: "byBusiness")
    # @key( name: "profileByOwnerUID", fields: ["id", "email", "name"])
    @key(name: "profileByOwner", fields: ["owner"], queryField: "profileByOwner")
    @auth(rules: [
      { allow: owner },
      { allow: public, operations: [read]},
      { allow: private, operations: [read] },
    ])  {
  id: ID!
  owner: ID
  email: String!
  name: String!
  business: Business @connection(fields: ["businessID"])
  businessID: ID!
  avatar: S3Object,
  roleTags: RoleTags!,
  countryCode: CountryCode!
  phoneNumber: String!
  # _version: Int
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type RoleTags {
  Sales: Boolean!
  Marketing: Boolean!
  Logistics: Boolean!
  Accounting: Boolean!
  Production: Boolean!
  QC: Boolean!
}

type CountryCode {
  code: String!
  label: String!
  phone: String!
}

