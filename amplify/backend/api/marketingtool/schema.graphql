type Business @model 
    @key(fields: ["id", "companyName"])
    @auth(rules: [
          { allow: owner },
          { allow: public, operations: [read]},
          { allow: private, operations: [read] },
      ]) {
  id: ID!
  companyName: String!
  country: String
  city: String
  businessNumber: String
  haveExperienceSelling: Boolean
  storeURLs: [String]
  haveWebsite: Boolean
  websiteURLs: [String]
  businessType: BusinessType
  # businessOwner: Profile @connection(fields: ["ownerUID"])
  # ownerUID: ID!
}

enum BusinessType {
  MANUFACTURER
  TRADINGCOMPANY
  MANUFACTURERANDTRADINGCOMPANY
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type Profile @model
    @key(fields: ["id", "email", "name"])
    @key(name: "profileByOwnerUID", fields: ["ownerUID"], queryField: "profileByOwnerUID")
    @auth(rules: [
      { allow: owner },
      { allow: public, operations: [read]},
      { allow: private, operations: [read] },
    ])  {
  id: ID!
  ownerUID: ID!
  email: String!
  name: String!
  business: Business @connection(fields: ["businessID"])
  businessID: ID!
  avatar: S3Object
}